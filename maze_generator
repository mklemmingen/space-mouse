# script with functions to create a 3 dimensional maze

# the code should create a 3 dimensional cube maze with one in and one out, 
# consistent out of a changeable but quadratic number of blocks.

# the blocks have the number: [floor number bottom to top].[column number east to west].[number from front to back]

# Parameter: edge_length
#         1.1.5 1.2.5 1.3.5 1.4.5 1.5.5
#       1.1.4 1.2.4 1.3.4 1.4.4 1.5.4
#     1.1.3 1.2.3 1.3.3 1.4.3 1.5.3
#   1.1.2 1.2.2 1.3.2 1.4.2 1.5.2
# 1.1.1 1.2.1 1.3.1 1.4.1 1.5.1
          2.1.5 2.3.5 2.3.5 2.4.5 2.5.5
#       2.1.4 2.2.4 2.3.4 2.4.4 2.5.4
#     2.1.3 2.2.3 2.3.3 2.4.3 2.5.3
#   2.1.2 2.2.2 2.3.2 2.4.2 2.5.2
# 2.1.1 2.2.1 2.3.1 2.4.1 2.5.1
#       3.1.4 3.2.4 3.3.4 3.4.4 3.5.5
#     3.1.3 3.2.3 3.3.3 3.4.3 3.5.3 
#   3.1.2 3.2.2 3.3.2 3.4.2 3.5.2
# 3.1.1 3.2.1 3.3.1 3.4.1 3.5.1
#         4.1.5 4.2.5 4.3.5 4.4.5 4.5.5
#       4.1.4 4.2.4 4.3.4 4.4.4 4.5.4
#     4.1.3 4.2.3 4.3.3 4.4.3 4.5.3
#   4.1.2 4.2.2 4.3.2 4.4.2 4.5.2
# 4.1.1 4.2.1 4.3.1 4.4.1 4.5.1
#         5.1.5 5.2.5 5.3.5 5.4.5 5.5.5
#       5.1.4 5.2.4 5.3.4 5.4.4 5.5.4
#     5.1.3 5.2.3 5.3.3 5.4.3 5.5.3
#   5.1.2 5.2.2 5.3.2 5.4.2 5.5.2
# 5.1.1 5.2.1 5.3.1 5.4.1 5.5.1

# these blocks have 6 walls. each wall has a number from one to 6 that is the same at every cube.
# we clone these cubes. 
# randomly, these walls receive either the value:
# 0. non-pass-through 1. pass-through 
# to be implemented late stage: 2. pass-through-once

# there is a crater in the top floor of the cube and in the lowest 

# the in for the space-mouse is a crater on top of the cube. 
  # above him should be a inpenetrable barrier, so that the computer cannot go up.
  # the while loop should stop if none of the craters walls are tested pass-through
# the out for the space-mouse is a crater at the bottom of the cube. 

# 2 parameters:
# depth of the cube and how to tall it is
